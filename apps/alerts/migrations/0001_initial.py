# Generated by Django 5.0.1 on 2025-10-28 23:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("assets", "0002_remove_sensor_unique_together"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_enabled",
                    models.BooleanField(default=True, verbose_name="Email Ativo"),
                ),
                (
                    "push_enabled",
                    models.BooleanField(default=True, verbose_name="Push Ativo"),
                ),
                (
                    "sound_enabled",
                    models.BooleanField(default=True, verbose_name="Som Ativo"),
                ),
                (
                    "sms_enabled",
                    models.BooleanField(default=False, verbose_name="SMS Ativo"),
                ),
                (
                    "whatsapp_enabled",
                    models.BooleanField(default=False, verbose_name="WhatsApp Ativo"),
                ),
                (
                    "critical_alerts",
                    models.BooleanField(default=True, verbose_name="Alertas Críticos"),
                ),
                (
                    "high_alerts",
                    models.BooleanField(default=True, verbose_name="Alertas Altos"),
                ),
                (
                    "medium_alerts",
                    models.BooleanField(default=True, verbose_name="Alertas Médios"),
                ),
                (
                    "low_alerts",
                    models.BooleanField(default=False, verbose_name="Alertas Baixos"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Para SMS (formato: +55XXXXXXXXXXX)",
                        max_length=20,
                        verbose_name="Número de Telefone",
                    ),
                ),
                (
                    "whatsapp_number",
                    models.CharField(
                        blank=True,
                        help_text="Para WhatsApp (formato: +55XXXXXXXXXXX)",
                        max_length=20,
                        verbose_name="Número WhatsApp",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferência de Notificação",
                "verbose_name_plural": "Preferências de Notificação",
                "db_table": "alerts_notification_preference",
            },
        ),
        migrations.CreateModel(
            name="Rule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nome da Regra"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "parameter_key",
                    models.CharField(max_length=100, verbose_name="Chave do Parâmetro"),
                ),
                (
                    "variable_key",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Chave da Variável"
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        choices=[
                            (">", "Maior que"),
                            (">=", "Maior ou igual"),
                            ("<", "Menor que"),
                            ("<=", "Menor ou igual"),
                            ("==", "Igual"),
                            ("!=", "Diferente"),
                        ],
                        max_length=10,
                        verbose_name="Operador",
                    ),
                ),
                ("threshold", models.FloatField(verbose_name="Valor Limite")),
                (
                    "unit",
                    models.CharField(blank=True, max_length=50, verbose_name="Unidade"),
                ),
                (
                    "duration",
                    models.IntegerField(default=5, verbose_name="Duração (minutos)"),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Critical", "Crítico"),
                            ("High", "Alto"),
                            ("Medium", "Médio"),
                            ("Low", "Baixo"),
                        ],
                        default="Medium",
                        max_length=20,
                        verbose_name="Severidade",
                    ),
                ),
                (
                    "actions",
                    models.JSONField(
                        default=list,
                        help_text="Lista de canais de notificação: EMAIL, IN_APP, SMS, WHATSAPP",
                        verbose_name="Ações ao Disparar",
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativa")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_rules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="assets.asset",
                        verbose_name="Equipamento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regra",
                "verbose_name_plural": "Regras",
                "db_table": "alerts_rule",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(verbose_name="Mensagem")),
                (
                    "severity",
                    models.CharField(max_length=20, verbose_name="Severidade"),
                ),
                (
                    "asset_tag",
                    models.CharField(max_length=100, verbose_name="Tag do Equipamento"),
                ),
                (
                    "parameter_key",
                    models.CharField(max_length=100, verbose_name="Parâmetro"),
                ),
                (
                    "parameter_value",
                    models.FloatField(verbose_name="Valor do Parâmetro"),
                ),
                ("threshold", models.FloatField(verbose_name="Limite")),
                (
                    "triggered_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Disparado em"
                    ),
                ),
                (
                    "acknowledged",
                    models.BooleanField(default=False, verbose_name="Reconhecido"),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Reconhecido em"
                    ),
                ),
                (
                    "resolved",
                    models.BooleanField(default=False, verbose_name="Resolvido"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolvido em"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notas")),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reconhecido por",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Resolvido por",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="alerts.rule",
                        verbose_name="Regra",
                    ),
                ),
            ],
            options={
                "verbose_name": "Alerta",
                "verbose_name_plural": "Alertas",
                "db_table": "alerts_alert",
                "ordering": ["-triggered_at"],
            },
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(
                fields=["equipment", "enabled"], name="alerts_rule_equipme_657605_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(
                fields=["severity", "enabled"], name="alerts_rule_severit_f48194_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["rule", "triggered_at"], name="alerts_aler_rule_id_0a8efc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["acknowledged", "resolved"],
                name="alerts_aler_acknowl_6f91eb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["severity", "triggered_at"],
                name="alerts_aler_severit_9e8fd0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["asset_tag"], name="alerts_aler_asset_t_e387fd_idx"
            ),
        ),
    ]
