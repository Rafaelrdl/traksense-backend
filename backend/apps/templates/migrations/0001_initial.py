# Generated by Django 4.2.23 on 2025-10-08 23:14

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DeviceTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "code",
                    models.TextField(
                        help_text="Código único do template (ex: chiller_v1)", unique=True
                    ),
                ),
                ("name", models.TextField(help_text="Nome legível do template")),
                (
                    "version",
                    models.IntegerField(
                        default=1, help_text="Número de versão (incrementa a cada mudança)"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Descrição detalhada do template"),
                ),
                (
                    "is_global",
                    models.BooleanField(
                        default=True,
                        help_text="Se este template está disponível para todos os tenants",
                    ),
                ),
                (
                    "tenant_override",
                    models.UUIDField(
                        blank=True, help_text="Tenant específico (se is_global=false)", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "superseded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Versão mais nova que substitui esta (se depreciada)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supersedes",
                        to="templates.devicetemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de Dispositivo",
                "verbose_name_plural": "Templates de Dispositivos",
                "db_table": "device_template",
                "ordering": ["code", "-version"],
            },
        ),
        migrations.CreateModel(
            name="PointTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "name",
                    models.TextField(
                        help_text="Nome único do ponto dentro do template (ex: temp_agua)"
                    ),
                ),
                (
                    "ptype",
                    models.TextField(
                        choices=[
                            ("num", "Numérico"),
                            ("bool", "Booleano"),
                            ("enum", "Enumeração"),
                            ("text", "Texto"),
                        ],
                        help_text="Tipo de dado do ponto: num|bool|enum|text",
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "unit",
                    models.TextField(
                        blank=True,
                        help_text="Unidade de medida (ex: °C, dBm) - obrigatório para num",
                        null=True,
                    ),
                ),
                (
                    "enum_values",
                    models.JSONField(
                        blank=True,
                        help_text="Lista de valores válidos para enum (ex: ['RUN','STOP','FAULT'])",
                        null=True,
                    ),
                ),
                (
                    "polarity",
                    models.TextField(
                        blank=True,
                        choices=[("normal", "Normal"), ("inverted", "Invertida")],
                        help_text="Polaridade para alarmes (normal ou inverted)",
                        null=True,
                    ),
                ),
                (
                    "hysteresis",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Histerese padrão para evitar flapping de alarmes (≥ 0)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "default_limits",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Limites padrão (JSON) para aplicar ao instanciar Point",
                        null=True,
                    ),
                ),
                (
                    "device_template",
                    models.ForeignKey(
                        help_text="Template de dispositivo ao qual este ponto pertence",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="point_templates",
                        to="templates.devicetemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de Ponto",
                "verbose_name_plural": "Templates de Pontos",
                "db_table": "point_template",
                "ordering": ["device_template", "name"],
            },
        ),
        migrations.CreateModel(
            name="DashboardTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "schema",
                    models.TextField(default="v1", help_text="Versão do schema JSON (sempre 'v1')"),
                ),
                (
                    "version",
                    models.IntegerField(
                        default=1, help_text="Número de versão do dashboard template"
                    ),
                ),
                (
                    "json",
                    models.JSONField(
                        help_text="Estrutura completa do dashboard conforme schema v1"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "device_template",
                    models.ForeignKey(
                        help_text="Template de dispositivo ao qual este dashboard pertence",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_templates",
                        to="templates.devicetemplate",
                    ),
                ),
                (
                    "superseded_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Versão mais nova que substitui esta",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supersedes",
                        to="templates.dashboardtemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Template de Dashboard",
                "verbose_name_plural": "Templates de Dashboards",
                "db_table": "dashboard_template",
                "ordering": ["device_template", "-version"],
            },
        ),
        migrations.AddConstraint(
            model_name="pointtemplate",
            constraint=models.UniqueConstraint(
                fields=("device_template", "name"), name="point_template_device_name_unique"
            ),
        ),
    ]
