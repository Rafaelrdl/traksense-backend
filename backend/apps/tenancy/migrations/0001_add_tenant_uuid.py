# Generated by Django 4.2.23 on 2025-10-09 03:10

from django.db import migrations, models
import uuid


def generate_tenant_uuids(apps, schema_editor):
    """
    Gera UUIDs determinísticos para tenants existentes usando SQL direto.
    
    UUID gerado a partir do schema_name para ser determinístico:
    - Namespace UUID: DNS namespace  
    - Nome: schema_name do tenant
    
    Isso garante que o mesmo tenant sempre terá o mesmo UUID.
    """
    # Não podemos usar apps.get_model porque tenancy_client não é gerenciado por migrations
    # Vamos usar SQL direto
    from django.db import connection
    with connection.cursor() as cursor:
        # Buscar todos os tenants
        cursor.execute("SELECT id, schema_name FROM public.tenancy_client")
        tenants = cursor.fetchall()
        
        for tenant_id, schema_name in tenants:
            # Gerar UUID v5 (determinístico) usando schema_name
            tenant_uuid = uuid.uuid5(uuid.NAMESPACE_DNS, f"traksense.tenant.{schema_name}")
            cursor.execute(
                "UPDATE public.tenancy_client SET uuid = %s WHERE id = %s",
                [str(tenant_uuid), tenant_id]
            )
            print(f"  ✅ Tenant '{schema_name}': {tenant_uuid}")


def reverse_uuids(apps, schema_editor):
    """Remove UUIDs (para rollback)."""
    from django.db import connection
    with connection.cursor() as cursor:
        cursor.execute("UPDATE public.tenancy_client SET uuid = NULL")


class Migration(migrations.Migration):

    dependencies = [
        ('tenancy', '0000_initial_tables'),
    ]

    operations = [
        # Adicionar coluna UUID nullable (se não existir)
        migrations.RunSQL(
            sql="""
            ALTER TABLE public.tenancy_client 
            ADD COLUMN IF NOT EXISTS uuid UUID NULL UNIQUE;
            """,
            reverse_sql="""
            ALTER TABLE public.tenancy_client 
            DROP COLUMN IF EXISTS uuid;
            """
        ),
        # Popular com UUIDs determinísticos
        migrations.RunPython(generate_tenant_uuids, reverse_uuids),
        # Tornar obrigatório após popular
        migrations.RunSQL(
            sql="""
            ALTER TABLE public.tenancy_client 
            ALTER COLUMN uuid SET NOT NULL;
            """,
            reverse_sql="""
            ALTER TABLE public.tenancy_client 
            ALTER COLUMN uuid DROP NOT NULL;
            """
        ),
    ]
