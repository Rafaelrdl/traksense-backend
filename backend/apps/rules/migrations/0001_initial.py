# Generated by Django 4.2.23 on 2025-10-08 23:18

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("devices", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Rule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "type",
                    models.TextField(
                        choices=[
                            ("threshold", "Limite"),
                            ("window", "Janela de Tempo"),
                            ("hysteresis", "Histerese"),
                        ],
                        help_text="Tipo da regra (threshold|window|hysteresis)",
                    ),
                ),
                ("params", models.JSONField(default=dict, help_text="Parâmetros da regra (JSON)")),
                ("enabled", models.BooleanField(default=True, help_text="Se a regra está ativa")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Momento da criação da regra"
                    ),
                ),
                (
                    "device",
                    models.ForeignKey(
                        blank=True,
                        help_text="Dispositivo ao qual esta regra pertence (NULL = global)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="devices.device",
                    ),
                ),
                (
                    "point",
                    models.ForeignKey(
                        blank=True,
                        help_text="Ponto ao qual esta regra pertence (NULL = vários pontos)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="devices.point",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regra",
                "verbose_name_plural": "Regras",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RuleEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    "state",
                    models.TextField(
                        choices=[("ACTIVE", "Ativo"), ("CLEARED", "Limpo")],
                        help_text="Estado do evento (ACTIVE|CLEARED)",
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, help_text="Razão da ativação/limpeza", null=True),
                ),
                ("ts", models.DateTimeField(auto_now_add=True, help_text="Momento do evento")),
                (
                    "rule",
                    models.ForeignKey(
                        help_text="Regra que gerou este evento",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="rules.rule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento de Regra",
                "verbose_name_plural": "Eventos de Regras",
                "ordering": ["-ts"],
                "indexes": [
                    models.Index(fields=["rule", "-ts"], name="rule_event_rule_ts_idx"),
                    models.Index(fields=["-ts"], name="rule_event_ts_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(fields=["device", "enabled"], name="rule_device_enabled_idx"),
        ),
        migrations.AddIndex(
            model_name="rule",
            index=models.Index(fields=["point", "enabled"], name="rule_point_enabled_idx"),
        ),
    ]
