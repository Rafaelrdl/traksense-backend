[pytest]
# Configuração do Pytest para testes estáveis e determinísticos
# TrakSense Backend Test Suite

# Adiciona opções padrão para todos os testes
addopts = 
    -ra
    -q
    --strict-markers
    --tb=short
    --disable-warnings
    # Descomente para ver print() em testes
    # -s
    # Descomente para executar em paralelo (requer pytest-xdist)
    # -n auto

# Diretórios de teste
testpaths = backend/tests

# Padrão de arquivos de teste
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Marcadores customizados (evita warnings)
markers =
    smoke: testes smoke rápidos (deselect with '-m "not smoke"')
    integration: testes de integração que podem ser mais lentos
    slow: testes que demoram mais de 1s
    django_db: marca testes que precisam de acesso ao banco de dados
    rls: testes de Row Level Security (isolamento de tenants)
    ingest: testes do pipeline de ingestão
    provisioning: testes de provisionamento EMQX
    aggregates: testes de agregações de dados

# Filtros de warnings (silenciar warnings conhecidos)
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:django
    # Adicione warnings específicos conforme necessário
    # error::FutureWarning

# Configuração do Django
DJANGO_SETTINGS_MODULE = traksense.settings
django_find_project = false

# Timeout para testes (requer pytest-timeout)
# timeout = 30

# Configuração de cobertura (requer pytest-cov)
# --cov=backend
# --cov-report=html
# --cov-report=term-missing
